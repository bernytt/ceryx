user www-data www-data;
worker_processes 1;
pid /run/nginx.pid;

env CERYX_REDIS_PREFIX;
env CERYX_REDIS_HOST;
env CERYX_REDIS_PASSWORD;
env CERYX_REDIS_PORT;

events {
    worker_connections 1024;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30s 30s;
    client_max_body_size  {{ default .Env.CERYX_MAX_REQUEST_BODY_SIZE "100m" }};

    # Use the Docker internal DNS, pick your favorite if running outside of Docker
    resolver {{ default .Env.CERYX_DNS_RESOLVER "127.0.0.11" }};

    # Logging
    access_log /dev/stdout;
    error_log /dev/stderr {{ default .Env.CERYX_LOG_LEVEL "info" }};

    # Lua settings
    lua_package_path "${prefix}lualib/?.lua;;";

    lua_shared_dict ceryx 1m;
    lua_shared_dict auto_ssl 1m;
    lua_shared_dict auto_ssl_settings 64k;
    {{ if eq (lower (default .Env.CERYX_DEBUG "")) "true" }}
    lua_code_cache off;
    {{ else }}
    lua_code_cache on;
    {{ end }}

    {{ if ne (lower (default .Env.CERYX_DISABLE_LETS_ENCRYPT "")) "true" }}
    # Enable automatic Let's Encryps certificate generation, if
    # `CERYX_DISABLE_LETS_ENCRYPT` is *not* set to `true`.
    # Check out https://github.com/openresty/lua-resty-core
    init_by_lua_file "lualib/letsencrypt.lua";

    init_worker_by_lua_block {
        auto_ssl:init_worker()
    }
    {{ end }}

    # Includes
    include mime.types;
    include ceryx.conf;
    include ../sites-enabled/*;
}